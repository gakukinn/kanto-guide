(()=>{var e={};e.id=79,e.ids=[79],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12620:(e,t,a)=>{"use strict";a.d(t,{p:()=>c});let s=require("fs/promises");var r=a.n(s),o=a(33873),n=a.n(o),i=a(72430);class c{constructor(){this.crawler=null,this.dataPath=n().join(process.cwd(),"data","matsuri"),this.ensureDataDirectory()}async getCrawler(){if(!this.crawler){let{MatsuriCrawler:e}=await a.e(2258).then(a.bind(a,12258));this.crawler=new e}return this.crawler}async ensureDataDirectory(){try{await r().mkdir(this.dataPath,{recursive:!0})}catch(e){console.error("Error creating data directory:",e instanceof Error?e.message:String(e))}}getDataFilePath(e="tokyo"){return n().join(this.dataPath,`${e}-matsuri.json`)}async saveMatsuriData(e,t){try{let a=this.getDataFilePath(e),s={lastUpdated:new Date().toISOString(),count:t.length,data:t};await r().writeFile(a,JSON.stringify(s,null,2),"utf-8"),console.log(`Saved ${t.length} matsuri events for ${e}`)}catch(e){throw console.error("Error saving matsuri data:",e instanceof Error?e.message:String(e)),e}}async loadMatsuriData(e="tokyo"){try{let t=this.getDataFilePath(e),a=await r().readFile(t,"utf-8");return JSON.parse(a).data.map(e=>i.L0.parse(e))}catch(t){return console.log(`No existing data found for ${e}, returning empty array`),[]}}async updateMatsuriData(e="tokyo"){let t=this.getDataSourceUrls(e);try{console.log(`Starting data update for ${e}...`);let a=await this.getCrawler(),s=await a.crawl(t);if(s.success&&s.data.length>0){let t=await this.loadMatsuriData(e),a=this.mergeMatsuriData(t,s.data);await this.saveMatsuriData(e,a),console.log(`Successfully updated ${e} matsuri data`)}return s}catch(e){return console.error("Error updating matsuri data:",e instanceof Error?e.message:String(e)),{success:!1,data:[],errors:[`Update error: ${e instanceof Error?e.message:String(e)}`],timestamp:new Date().toISOString(),source:"matsuri-data-service"}}finally{this.crawler&&await this.crawler.cleanup()}}getDataSourceUrls(e){let t={tokyo:["https://omaturilink.com/%E6%9D%B1%E4%BA%AC%E9%83%BD/","https://matcha-jp.com/jp/20117","https://www.on-japan.jp/home/eventinfo/matsuri-info/"],kanagawa:["https://omaturilink.com/%E7%A5%9E%E5%A5%88%E5%B7%9D%E7%9C%8C/"],saitama:["https://omaturilink.com/%E5%9F%BC%E7%8E%89%E7%9C%8C/"]};return t[e]||t.tokyo}mergeMatsuriData(e,t){let a=[...e];return t.forEach(e=>{let t=a.findIndex(t=>t.title===e.title&&t.date===e.date);t>=0?a[t]={...e,likes:a[t].likes,id:a[t].id}:a.push(e)}),a}async getMatsuriStats(e="tokyo"){let t=await this.loadMatsuriData(e),a=new Date;return{total:t.length,byCategory:t.reduce((e,t)=>(e[t.category]=(e[t.category]||0)+1,e),{}),upcoming:t.filter(e=>new Date(e.date)>=a).length,lastUpdated:t.length>0?t[0].lastUpdated:new Date().toISOString()}}async searchMatsuri(e="tokyo",t,a){let s=(await this.loadMatsuriData(e)).filter(e=>e.title.toLowerCase().includes(t.toLowerCase())||e.description.toLowerCase().includes(t.toLowerCase())||e.location.toLowerCase().includes(t.toLowerCase()));return a?.category&&(s=s.filter(e=>e.category===a.category)),a?.startDate&&(s=s.filter(e=>e.date>=a.startDate)),a?.endDate&&(s=s.filter(e=>e.date<=a.endDate)),s}async updateLikes(e,t,a){let s=await this.loadMatsuriData(e),r=s.findIndex(e=>e.id===t);r>=0&&(s[r].likes=a,await this.saveMatsuriData(e,s))}async validateData(e="tokyo"){try{let t=await this.loadMatsuriData(e),a=[],s=[];return t.forEach((e,t)=>{try{i.L0.parse(e)}catch(e){a.push(`Event ${t}: ${e}`)}let r=new Date(e.date),o=new Date,n=new Date(o.getFullYear()-1,o.getMonth(),o.getDate()),c=new Date(o.getFullYear()+2,o.getMonth(),o.getDate());(r<n||r>c)&&s.push(`Event "${e.title}" has unusual date: ${e.date}`),e.website.startsWith("http")||s.push(`Event "${e.title}" has invalid website URL`)}),{isValid:0===a.length,errors:a,warnings:s}}catch(e){return{isValid:!1,errors:[`Validation error: ${e}`],warnings:[]}}}}},14990:(e,t,a)=>{"use strict";a.r(t),a.d(t,{patchFetch:()=>v,routeModule:()=>f,serverHooks:()=>D,workAsyncStorage:()=>S,workUnitAsyncStorage:()=>k});var s={};a.r(s),a.d(s,{GET:()=>p,POST:()=>h,dynamic:()=>u});var r=a(96559),o=a(48088),n=a(37719),i=a(32190),c=a(12620),l=a(24723);let u="force-static",d=null;function g(){return d||(d=new c.p),d}async function p(e){try{let{searchParams:t}=new URL(e.url);switch(t.get("action")||"dashboard"){case"dashboard":let[a,s]=await Promise.all([l.R.getDataStats(),Promise.resolve(l.R.getStatus())]);return i.NextResponse.json({success:!0,dashboard:{stats:a,scheduler:s,systemInfo:{nodeVersion:process.version,platform:process.platform,uptime:process.uptime(),memoryUsage:process.memoryUsage(),timestamp:new Date().toISOString()}}});case"stats":let r=await l.R.getDataStats();return i.NextResponse.json({success:!0,stats:r,timestamp:new Date().toISOString()});case"scheduler":let o=l.R.getStatus();return i.NextResponse.json({success:!0,scheduler:o,timestamp:new Date().toISOString()});case"validate":let n=t.get("prefecture")||"tokyo",c=await g().validateData(n);return i.NextResponse.json({success:!0,validation:c,prefecture:n,timestamp:new Date().toISOString()});case"health":let u=await m();return i.NextResponse.json({success:!0,health:u,timestamp:new Date().toISOString()});default:return i.NextResponse.json({success:!1,error:"Invalid action"},{status:400})}}catch(e){return console.error("Admin API Error:",e),i.NextResponse.json({success:!1,error:"Failed to fetch admin data",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function h(e){try{let t=await e.json(),{action:a,prefecture:s="tokyo"}=t;switch(a){case"start-scheduler":return l.R.start(),i.NextResponse.json({success:!0,message:"Scheduler started successfully",status:l.R.getStatus()});case"stop-scheduler":return l.R.stop(),i.NextResponse.json({success:!0,message:"Scheduler stopped successfully",status:l.R.getStatus()});case"manual-update":return await l.R.manualUpdate(s),i.NextResponse.json({success:!0,message:`Manual update completed for ${s}`,prefecture:s,timestamp:new Date().toISOString()});case"clear-data":let{confirm:r}=t;if("YES_DELETE_ALL_DATA"!==r)return i.NextResponse.json({success:!1,error:"Confirmation required"},{status:400});return i.NextResponse.json({success:!0,message:`Data cleared for ${s}`,warning:"This action cannot be undone"});case"backup-data":let o=await w(s);return i.NextResponse.json({success:!0,message:"Data backup created successfully",backup:o});case"restore-data":let{backupId:n}=t;if(!n)return i.NextResponse.json({success:!1,error:"Backup ID required"},{status:400});let c=await y(s,n);return i.NextResponse.json({success:!0,message:"Data restored successfully",restore:c});default:return i.NextResponse.json({success:!1,error:"Invalid action"},{status:400})}}catch(e){return console.error("Admin API POST Error:",e),i.NextResponse.json({success:!1,error:"Failed to process admin request",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function m(){let e={},t="healthy";try{let t=await g().loadMatsuriData("tokyo");e.dataFiles={status:"ok",count:t.length,message:`Found ${t.length} Tokyo matsuri events`}}catch(a){e.dataFiles={status:"error",message:"Failed to load data files",error:a instanceof Error?a.message:"Unknown error"},t="error"}let a=l.R.getStatus();e.scheduler={status:a.isRunning?"ok":"warning",activeTasks:a.activeTasks.length,message:a.isRunning?"Scheduler is running":"Scheduler is stopped"},a.isRunning||"healthy"!==t||(t="warning");let s=Math.round(process.memoryUsage().heapUsed/1024/1024);e.memory={status:s>500?"warning":"ok",usage:`${s}MB`,message:`Memory usage: ${s}MB`},s>500&&"healthy"===t&&(t="warning");let r=Math.round(process.uptime()/3600);return e.uptime={status:"ok",hours:r,message:`System uptime: ${r} hours`},{status:t,checks:e}}async function w(e){return{backupId:`backup-${e}-${Date.now()}`,timestamp:new Date().toISOString(),size:0}}async function y(e,t){return{restored:!0,timestamp:new Date().toISOString(),recordsRestored:0}}let f=new r.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/admin/matsuri/route",pathname:"/api/admin/matsuri",filename:"route",bundlePath:"app/api/admin/matsuri/route"},resolvedPagePath:"C:\\Users\\GAKU\\Desktop\\Kanto Guide\\src\\app\\api\\admin\\matsuri\\route.ts",nextConfigOutput:"export",userland:s}),{workAsyncStorage:S,workUnitAsyncStorage:k,serverHooks:D}=f;function v(){return(0,n.patchFetch)({workAsyncStorage:S,workUnitAsyncStorage:k})}},24723:(e,t,a)=>{"use strict";a.d(t,{R:()=>n});let s=require("node-cron");var r=a(12620);class o{constructor(){this.tasks=new Map,this.dataService=new r.p}start(){console.log("Starting Matsuri Scheduler..."),this.scheduleTask("monthly-update","0 2 1 * *",async()=>{console.log("Running monthly matsuri data update..."),await this.updateAllPrefectures()}),this.scheduleTask("monthly-validation","0 3 15 * *",async()=>{console.log("Running monthly data validation..."),await this.validateAllData()}),this.scheduleTask("weekly-check","0 1 * * 1",async()=>{await this.checkUpcomingEvents()}),console.log("Matsuri Scheduler started successfully"),console.log("Schedule: Monthly updates (1st), validation (15th), weekly upcoming checks (Monday)")}stop(){console.log("Stopping Matsuri Scheduler..."),this.tasks.forEach((e,t)=>{e.stop(),console.log(`Stopped task: ${t}`)}),this.tasks.clear(),console.log("Matsuri Scheduler stopped")}scheduleTask(e,t,a){let r=s.schedule(t,async()=>{try{console.log(`Executing scheduled task: ${e}`),await a(),console.log(`Completed scheduled task: ${e}`)}catch(t){console.error(`Error in scheduled task ${e}:`,t instanceof Error?t.message:String(t))}},{timezone:"Asia/Tokyo"});this.tasks.set(e,r),r.start(),console.log(`Scheduled task: ${e} with cron: ${t}`)}async updateAllPrefectures(){for(let e of["tokyo","kanagawa","saitama","chiba"])try{console.log(`Updating data for ${e}...`);let t=await this.dataService.updateMatsuriData(e);t.success?console.log(`✅ Successfully updated ${e}: ${t.data.length} events`):console.error(`❌ Failed to update ${e}:`,t.errors),await this.delay(5e3)}catch(t){console.error(`Error updating ${e}:`,t instanceof Error?t.message:String(t))}}async validateAllData(){for(let e of["tokyo","kanagawa","saitama","chiba"])try{console.log(`Validating data for ${e}...`);let t=await this.dataService.validateData(e);t.isValid?console.log(`✅ ${e} data is valid`):console.error(`❌ ${e} data validation failed:`,t.errors),t.warnings.length>0&&console.warn(`⚠️ ${e} data warnings:`,t.warnings)}catch(t){console.error(`Error validating ${e}:`,t instanceof Error?t.message:String(t))}}async checkUpcomingEvents(){try{let e=await this.dataService.getMatsuriStats("tokyo");e.upcoming>0&&console.log(`📅 Found ${e.upcoming} upcoming matsuri events in Tokyo`)}catch(e){console.error("Error checking upcoming events:",e instanceof Error?e.message:String(e))}}async manualUpdate(e="tokyo"){console.log(`Manual update triggered for ${e}`);try{let t=await this.dataService.updateMatsuriData(e);t.success?console.log(`✅ Manual update successful: ${t.data.length} events`):console.error(`❌ Manual update failed:`,t.errors)}catch(e){throw console.error("Manual update error:",e instanceof Error?e.message:String(e)),e}}getStatus(){let e=Array.from(this.tasks.keys()),t={};return this.tasks.forEach((e,a)=>{try{t[a]="Next run time not available"}catch(e){t[a]=`Error getting next run time: ${e instanceof Error?e.message:String(e)}`}}),{isRunning:this.tasks.size>0,activeTasks:e,nextRuns:t}}delay(e){return new Promise(t=>setTimeout(t,e))}async getDataStats(){let e={};for(let t of["tokyo","kanagawa","saitama","chiba"])try{e[t]=await this.dataService.getMatsuriStats(t)}catch(a){e[t]={error:`Failed to get stats: ${a instanceof Error?a.message:String(a)}`}}return e}}let n=new o;process.on("SIGINT",()=>{console.log("Received SIGINT, stopping scheduler..."),n.stop(),process.exit(0)}),process.on("SIGTERM",()=>{console.log("Received SIGTERM, stopping scheduler..."),n.stop(),process.exit(0)})},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},49667:e=>{"use strict";e.exports=import("crawlee")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},72430:(e,t,a)=>{"use strict";a.d(t,{L0:()=>r});var s=a(45697);let r=s.z.object({id:s.z.string(),title:s.z.string(),japaneseName:s.z.string(),englishName:s.z.string(),date:s.z.string(),endDate:s.z.string().optional(),location:s.z.string(),category:s.z.enum(["大型","中型","小型"]),highlights:s.z.array(s.z.string()),likes:s.z.number().default(0),website:s.z.string().url(),description:s.z.string(),prefecture:s.z.string().default("東京都"),lastUpdated:s.z.string().default(()=>new Date().toISOString()),source:s.z.string().url(),verified:s.z.boolean().default(!1)});s.z.object({name:s.z.string(),url:s.z.string().url(),selector:s.z.string(),fields:s.z.record(s.z.string()),lastCrawled:s.z.string().optional(),isActive:s.z.boolean().default(!0)}),s.z.object({success:s.z.boolean(),data:s.z.array(r),errors:s.z.array(s.z.string()),timestamp:s.z.string(),source:s.z.string()})},78335:()=>{},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[4447,580,5697],()=>a(14990));module.exports=s})();