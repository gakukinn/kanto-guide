const { PrismaClient } = require('./src/generated/prisma');

const prisma = new PrismaClient();

async function checkTokyoRegionId() {
  console.log('üîç Ê£ÄÊü•‰∏ú‰∫¨ÈÉΩÁöÑregionId...');

  try {
    const tokyoRegion = await prisma.region.findFirst({
      where: { 
        OR: [
          { nameCn: '‰∏ú‰∫¨ÈÉΩ' },
          { nameJp: { contains: 'Êù±‰∫¨' } }
        ]
      }
    });

    if (tokyoRegion) {
      console.log('‚úÖ ÊâæÂà∞‰∏ú‰∫¨ÈÉΩregionÔºö');
      console.log('ID:', tokyoRegion.id);
      console.log('‰∏≠ÊñáÂêç:', tokyoRegion.nameCn);
      console.log('Êó•ÊñáÂêç:', tokyoRegion.nameJp);
      console.log('Ëã±ÊñáÂêç:', tokyoRegion.nameEn);
    } else {
      console.log('‚ùå Êú™ÊâæÂà∞‰∏ú‰∫¨ÈÉΩregion');
      
      // ÂàóÂá∫ÊâÄÊúâregion
      const allRegions = await prisma.region.findMany();
      console.log('üìã ÊâÄÊúâÂèØÁî®ÁöÑregion:');
      allRegions.forEach(region => {
        console.log(`- ${region.id}: ${region.nameCn} (${region.nameJp})`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkTokyoRegionId(); 