generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// 地区表 - 6个固定地区
model Region {
  id        String   @id @default(cuid())
  code      String   @unique // tokyo, saitama, chiba, kanagawa, kitakanto, koshinetsu
  nameCn    String // 中文名称
  nameJp    String // 日文名称
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联各种活动
  hanabiEvents       HanabiEvent[]
  matsuriEvents      MatsuriEvent[]
  hanamiEvents       HanamiEvent[]
  momijiEvents       MomijiEvent[]
  illuminationEvents IlluminationEvent[]
  cultureEvents      CultureEvent[]

  @@map("regions")
}

// 花火活动表 - 十一项标准数据结构
model HanabiEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间 (日期+时间合并)
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("hanabi_events")
}

// 祭典活动表 - 相同的十一项数据结构
model MatsuriEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("matsuri_events")
}

// 花见活动表 - 相同的十一项数据结构
model HanamiEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("hanami_events")
}

// 红叶活动表 - 相同的十一项数据结构
model MomijiEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("momiji_events")
}

// 灯光活动表 - 相同的十一项数据结构
model IlluminationEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("illumination_events")
}

// 文艺活动表 - 相同的十一项数据结构
model CultureEvent {
  id         String  @id @default(cuid())
  region     String // 地区 (东京都/埼玉县/千叶县/神奈川/北关东/甲信越)
  detailLink String? // 详情页面链接，用于三层卡片的"查看详情"按钮
  name       String // 1. 名称
  address    String // 2. 所在地
  datetime   String // 3. 开催期间时间
  venue      String // 4. 开催场所
  access     String // 5. 交通方式
  organizer  String // 6. 主办方
  price      String // 7. 料金
  contact    String // 8. 联系方式
  website    String // 9. 官方网站
  googleMap  String // 10. 谷歌地图位置

  // AI生成内容
  description String? // 活动简介描述，AI根据官网内容生成

  // 元数据
  regionId  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  regionRef Region @relation(fields: [regionId], references: [id])

  @@index([regionId])
  @@map("culture_events")
}

model ValidationResult {
  id              String   @id @default(cuid())
  eventId         String
  eventType       String
  regionCode      String
  fieldName       String
  localValue      String?
  externalValue   String?
  isConsistent    Boolean
  confidenceScore Float    @default(0.0)
  notes           String?
  validationDate  DateTime @default(now())

  @@index([eventId, eventType])
  @@index([validationDate])
  @@index([isConsistent])
  @@map("validation_results")
}

model ExternalRawData {
  id         String   @id @default(cuid())
  eventId    String
  regionCode String
  eventType  String
  sourceType String
  rawHtml    String?
  parsedData Json
  sourceUrl  String
  scrapeDate DateTime @default(now())

  @@index([eventId])
  @@index([scrapeDate])
  @@index([sourceType])
  @@map("external_raw_data")
}
