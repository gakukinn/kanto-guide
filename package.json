{
  "name": "kanto-travel-guide",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev-clean": "taskkill /f /im node.exe 2>nul & npm run dev",
    "clean-restart": "node scripts/clean-restart.js",
    "modify-activity": "node scripts/modify-activity-type.js",
    "verify-db": "node scripts/verify-database-structure.js",
    "check-port": "node scripts/check-port.js",
    "kill-dev": "taskkill /f /im node.exe",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,md,json}\" \"*.{ts,tsx,js,jsx,md,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,md,json}\" \"*.{ts,tsx,js,jsx,md,json}\"",
    "type-check": "tsc --noEmit --skipLibCheck",
    "type-check-strict": "tsc --noEmit --strict --skipLibCheck",
    "fix-types": "node scripts/core/type-check-and-fix.js",
    "check-all": "npm run type-check && npm run lint",
    "fix-all": "npm run fix-types && npm run lint -- --fix && npx prettier --write \"src/**/*.{ts,tsx}\"",
    "pre-commit": "npm run type-check-strict && npm run lint",
    "validate-data": "node -e \"console.log('Validating hanabi data structure...'); require('./scripts/core/validate-hanabi-data.js');\"",
    "check-quality": "node scripts/website-quality-checker.js",
    "fix-colors": "node scripts/fix-color-consistency.js",
    "dev-check": "npm run check-quality && npm run dev",
    "fix-kanji-errors": "echo '⚠️ 请根据检查结果手动修复汉字错误，不要擅自转换日文汉字为中文简体'",
    "validate-links": "node scripts/validate-links.js",
    "validate-mappings": "node scripts/validate-page-mappings.js",
    "fix-mappings": "node scripts/fix-page-mappings.js",
    "create-smart-hanabi": "node scripts/create-hanabi-with-mapping.js",
    "validate-all": "npm run validate-links && npm run validate-mappings && npm run check-all && npm run check-quality",
    "fix-all-mappings": "npm run fix-mappings && npm run validate-mappings",
    "performance-check": "node scripts/performance-check.js",
    "optimize": "npm run performance-check && echo '💡 请根据性能报告执行优化建议'",
    "create-hanabi": "node scripts/create-hanabi-detail-page.js",
    "matsuri": "node scripts/matsuri-cli.js",
    "matsuri:update": "node scripts/matsuri-cli.js update",
    "matsuri:validate": "node scripts/matsuri-cli.js validate all",
    "matsuri:stats": "node scripts/matsuri-cli.js stats",
    "matsuri:health": "node scripts/matsuri-cli.js health",
    "matsuri:backup": "node scripts/matsuri-cli.js backup",
    "matsuri:scheduler": "node scripts/matsuri-cli.js scheduler status",
    "matsuri:demo": "node scripts/matsuri-demo.js",
    "smart-update": "node scripts/smart-data-updater.js",
    "update-hanabi": "node scripts/smart-data-updater.js hanabi",
    "update-matsuri": "node scripts/smart-data-updater.js matsuri",
    "update-all-activities": "node scripts/smart-data-updater.js all",
    "update-tokyo-hanabi": "node scripts/smart-data-updater.js hanabi tokyo",
    "update-force": "node scripts/smart-data-updater.js all --force",
    "quality-report": "node scripts/data-quality-report.js",
    "data-analysis": "node scripts/data-quality-report.js generate",
    "full-analysis": "npm run quality-report && npm run check-quality",
    "ai-validate": "node scripts/ai-tech-stack-enforcer.js validate",
    "ai-template": "node scripts/ai-tech-stack-enforcer.js template",
    "ai-setup": "node scripts/ai-tech-stack-enforcer.js setup",
    "ai-enforce": "echo '🚨 AI技术栈强制执行器已启用，只允许使用Playwright+Cheerio'",
    "validate-japanese": "node scripts/japanese-database-validator.cjs",
    "check-walkerplus": "npm run validate-japanese",
    "full-japanese-check": "npm run validate-japanese && npm run check-quality",
    "validate-static": "node scripts/static-site-validator.js",
    "validate-weekly": "npm run validate-static",
    "validate-complete": "npm run validate-static && npm run validate-all && npm run full-japanese-check",
    "crawl-tokyo": "npx ts-node --esm scripts/crawl-tokyo-data.ts",
    "deploy-safety-check": "node scripts/deployment-safety-check.cjs",
    "safe-deploy": "npm run deploy-safety-check && npm run validate-complete && git add . && git commit -m 'feat: safe deployment with validation' --no-verify && echo '✅ 安全部署准备完成'",
    "pre-deploy": "npm run deploy-safety-check && npm run export",
    "deploy-check": "npm run deploy-safety-check",
    "push-and-deploy": "git push origin main && echo '⏳ 等待30秒让部署平台同步...' && timeout 30 && echo '🚀 现在可以安全部署了！'",
    "backup": "node scripts/backup-automation.js",
    "backup:list": "node scripts/auto-backup.js list",
    "backup:clean": "node scripts/auto-backup.js clean",
    "backup:restore": "node scripts/auto-backup.js restore",
    "backup:deploy": "npm run backup && npm run deploy-safety-check",
    "optimize-images": "node scripts/optimize-images.cjs",
    "build-optimized": "npm run optimize-images && npm run build",
    "export": "next export",
    "upload-images": "node scripts/quick-image-upload.js",
    "batch-upload": "node scripts/image-batch-uploader.js",
    "image-web": "echo '打开 scripts/image-upload-interface.html 文件进行网页上传'",
    "deepeval-test": "node scripts/core/test-deepeval-integration.js",
    "deepeval-batch": "node scripts/core/test-deepeval-integration.js batch",
    "deepeval-demo": "node scripts/core/test-deepeval-integration.js demo",
    "anti-fabrication": "echo '🛡️ DeepEval防编造系统已集成，使用 npm run deepeval-test 进行测试'",
    "organize-data": "node scripts/auto-data-organizer.js",
    "clean-temp": "node -e \"const fs=require('fs'); const path=require('path'); const tempDir=path.join(__dirname,'data','temp'); if(fs.existsSync(tempDir)){fs.rmSync(tempDir,{recursive:true}); fs.mkdirSync(tempDir);} console.log('🧹 temp目录已清理');\"",
    "data-status": "node -e \"const fs=require('fs'); const path=require('path'); const activeDir=path.join(__dirname,'data','active'); if(fs.existsSync(activeDir)){const cats=fs.readdirSync(activeDir); cats.forEach(cat=>{const files=fs.readdirSync(path.join(activeDir,cat)); console.log(cat+': '+files.length+'个文件');})} else {console.log('数据目录不存在，请先运行 npm run organize-data');}\"",
    "data-guide": "echo '📖 数据管理指南位于: data/DATA-MANAGEMENT-GUIDE.md'"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{md,json}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@googlemaps/js-api-loader": "^1.16.8",
    "@modelcontextprotocol/sdk": "^1.12.1",
    "@nozbe/microfuzz": "^1.0.0",
    "@playwright/mcp": "^0.0.28",
    "@prisma/client": "^6.10.1",
    "@supabase/supabase-js": "^2.50.0",
    "@types/cheerio": "^0.22.35",
    "@types/pg": "^8.15.4",
    "autoprefixer": "^10.4.21",
    "axios": "^1.10.0",
    "better-sqlite3": "^11.10.0",
    "cheerio": "^1.1.0",
    "crawlee": "^3.13.8",
    "date-fns": "^4.1.0",
    "dotenv": "^16.6.1",
    "duckdb": "^1.3.1",
    "iconv-lite": "^0.6.3",
    "jsdom": "^26.1.0",
    "mcp-client": "^1.12.3",
    "next": "15.3.3",
    "node-cron": "^4.1.0",
    "node-fetch": "^2.7.0",
    "node-html-parser": "^7.0.1",
    "pg": "^8.16.2",
    "playwright": "^1.53.1",
    "prettier": "^3.5.3",
    "prisma": "^6.10.1",
    "puppeteer": "^24.10.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.58.1",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "wanakana": "^5.3.1",
    "zod": "^3.25.64"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/eslintrc": "^3.3.1",
    "@tailwindcss/language-server": "^0.14.21",
    "@types/google.maps": "^3.58.1",
    "@types/node": "^20.19.1",
    "@types/node-cron": "^3.0.11",
    "@types/prop-types": "^15.7.15",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "eslint": "^8",
    "eslint-config-next": "^15.3.3",
    "glob": "^11.0.3",
    "imagemin": "^8.0.1",
    "imagemin-mozjpeg": "^10.0.0",
    "imagemin-webp": "^8.0.0",
    "lint-staged": "^16.1.2",
    "postcss": "^8",
    "prettier-plugin-tailwindcss": "^0.6.12",
    "sharp": "^0.34.2",
    "tailwindcss": "^3.4.1",
    "ts-node": "^10.9.2",
    "typescript": "^5"
  }
}
